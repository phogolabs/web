---
groups:
  - name: web
    jobs:
      - unit
      - deploy-to-acceptance
      - build-docker-image-rc
      - create-final-release
      - deploy-to-production

resources:
  - name: web-rc
    type: git
    source:
      uri: git@github.com:phogolabs/web.git
      branch: master
      ignore_paths: ["infrastructure/*"]
      private_key: {{git-private-key}}

  - name: web-ansible-playbook
    type: git
    source:
      uri: git@github.com:phogolabs/web.git
      branch: master
      paths: ["infrastructure/*"]
      private_key: {{git-private-key}}

  - name: web-final
    type: git
    source:
      uri: git@github.com:phogolabs/web.git
      branch: master
      tag_filter: v*
      private_key: {{git-private-key}}

  - name: concourse-tasks
    type: git
    source:
      uri: https://github.com/phogolabs/concourse-tasks.git
      branch: master

  - name: github-release
    type: github-release
    source:
      user: phogolabs
      repository: web
      access_token: {{github-access-token}}

  - name: docker-image
    type: docker-image
    source:
      email: {{docker-hub-email}}
      username: {{docker-hub-username}}
      password: {{docker-hub-password}}
      repository: phogo/web

  - name: heroku
    type: git
    source:
      uri: git@heroku.com:phogo.git
      branch: master
      private_key: {{git-private-key}}

jobs:
  - name: unit
    plan:
      - get: web-rc
        trigger: true
      - task: unit
        input_mapping: {web: web-rc}
        file: web-rc/ci/task/unit.yml

  - name: build-docker-image-rc
    plan:
      - get: concourse-tasks
      - get: web-rc
        passed: [unit]
        trigger: true
      - task: version
        file: concourse-tasks/git/version.yml
        input_mapping: {repository: web-rc}
      - task: minify
        file: concourse-tasks/minify/minify.yml
        input_mapping: {web-application: web-rc}
        params:
         DIRECTORY_CSS: public/static/css
         DIRECTORY_JS: public/static/js
      - put: docker-image
        params:
         build: web-application-min
         tag_prefix: 'rc-'
         tag: version/hash
        get_params: {skip_download: true}

  - name: deploy-to-acceptance
    plan:
      - get: web-rc
        passed: [unit]
        trigger: true
      - put: heroku
        params: {repository: web-rc, force: true}

  - name: create-final-release
    serial_groups: [web-release]
    plan:
      - get: concourse-tasks
      - get: web-final
        trigger: true
      - task: version
        file: concourse-tasks/git/version.yml
        input_mapping: {repository: web-final}
        params: {PRODUCT_NAME: phogo-web}
      - task: minify
        file: concourse-tasks/minify/minify.yml
        input_mapping: {web-application: web-final}
        params:
         DIRECTORY_CSS: public/static/css
         DIRECTORY_JS: public/static/js
      - put: docker-image
        get_params: {skip_download: true}
        params:
         build: web-application-min
         tag_prefix: 'v'
         tag: version/number
         tag_as_latest: true
      - put: github-release
        params:
          name: version/name
          tag: version/number
          tag_prefix: 'v'

  - name: deploy-to-production
    serial_groups: [web-release]
    plan:
      - get: web-ansible-playbook
      - get: web-final
        passed: [create-final-release]
        trigger: true
      - get: concourse-tasks
        passed: [create-final-release]
      - task: run-ansible-playbook
        file: concourse-tasks/ansible/ansible.yml
        input_mapping: {ansible-playbooks: web-ansible-playbook}
        params:
          ANSIBLE_PLAYBOOK: main.yml
          ANSIBLE_PLAYBOOK_DIR: infrastructure
          SSH_PRIVATE_KEY: {{git-private-key}}
          COOKIE_SECRET: {{phogo-web-cookie-secret}}
          SENDGRID_API_KEY: {{phogo-web-sendgrid-api-key}}
          HTTPS_CERT: {{phogo-web-https-cert}}
          HTTPS_KEY: {{phogo-web-https-key}}
