---
groups:
  - name: web
    jobs:
      - unit
      - deploy-to-heroku
      - build-docker-image-rc
      - create-final-release

resources:
  - name: web
    type: git
    source:
      uri: git@github.com:phogolabs/web.git
      branch: master
      private_key: {{git-private-key}}

  - name: web-rc
    type: git
    source:
      uri: git@github.com:phogolabs/web.git
      branch: master
      tag_filter: v*
      private_key: {{git-private-key}}

  - name: concourse-tasks
    type: git
    source:
      uri: https://github.com/phogolabs/concourse-tasks.git
      branch: master

  - name: github-release
    type: github-release
    source:
      user: phogolabs
      repository: web
      access_token: {{github-access-token}}

  - name: docker-image
    type: docker-image
    source:
      email: {{docker-hub-email}}
      username: {{docker-hub-username}}
      password: {{docker-hub-password}}
      repository: phogo/web

  - name: heroku
    type: git
    source:
      uri: git@heroku.com:phogo.git
      branch: master
      private_key: {{git-private-key}}

jobs:
  - name: unit
    plan:
      - get: web
        trigger: true
      - task: unit
        file: web/ci/task/unit.yml

  - name: build-docker-image-rc
    plan:
      - get: concourse-tasks
      - get: web
        passed: [unit]
        trigger: true
      - task: version
        file: concourse-tasks/git/version.yml
        input_mapping: {repository: web}
      - put: docker-image
        params:
         build: web
         tag_prefix: 'rc-'
         tag: version/hash
        get_params: {skip_download: true, save: true}

  - name: deploy-to-heroku
    plan:
      - get: web
        passed: [unit]
        trigger: true
      - put: heroku
        params: {repository: web}

  - name: create-final-release
    plan:
      - get: concourse-tasks
      - get: web-rc
        trigger: true
      - task: version
        file: concourse-tasks/git/version.yml
        input_mapping: {repository: web-rc}
        params: {PRODUCT_NAME: phogo-web}
      - put: docker-image
        params:
         build: web-rc
         tag_prefix: 'v'
         tag: version/number
         tag_as_latest: true
      - put: github-release
        params:
          name: version/name
          commitish: version/hash
          tag: version/number
          tag_prefix: 'v'
